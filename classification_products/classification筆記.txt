# 讀取 CSV 檔案
df = pd.read_csv("taxi_fare_training.csv")

classification product:

1.train.py 訓練程式的架構:

# [Step 1] — 命令列參數解析
# 目的：讓使用者能在執行程式時，自訂路徑、訓練回合數、批次大小、學習率等參數。


# [Step 2] — 資料載入與前處理
# 目的：下載並轉換 Fashion-MNIST 資料集，拆分為訓練集與驗證集。


# [Step 3] — 建立 DataLoader
# 目的：以批次方式輸入資料，方便 GPU 平行處理。

# [Step 4] — 建立模型與訓練設定
# 目的：初始化模型、損失函數與優化器。

#[ Step 5] — 模型訓練與驗證迴圈及訓練紀錄與輸出
# 目的：反覆訓練模型、驗證效能、記錄結果。將訓練過程寫入 CSV，方便後續繪圖或分析。

2. plot_metrices.py 繪折線圖程式的架構:

| 區段      | 功能        | 關鍵任務                |
| ------- | --------- | ------------------- |
| ① 檔案設定  | 指定路徑與環境   | 固定 I/O 檔案位置         |
| ② 讀取資料  | 驗證與清洗 CSV | 確保欄位正確與資料完整         |
| ③ 輔助函式  | 尋找最佳指標    | 找出最小 loss、最大 acc    |
| ④ 主繪圖流程 | 繪製圖表並輸出   | 產生 Loss/Accuracy 雙圖 |
| ⑤ 主執行點  | 控制程式執行方式  | 支援 CLI 或 import 模式  |


3.test.py 測試集圖片正確率呈現:


test.py
│
├── (1) 匯入模組與設定參數
├── (2) 定義輔助函式
│       ├─ set_seed()     → 固定隨機性
│       ├─ set_zh_font()  → 中文字體設定
│       └─ denorm_img()   → 去正規化圖片
│
├── (3) main() 主流程
│       ├─ 初始化 (隨機種子、字體、裝置)
│       ├─ 載入測試資料集
│       ├─ 載入訓練後模型
│       ├─ 隨機選取測試圖片
│       ├─ 預測分類與信心值
│       ├─ 建立圖片網格顯示預測結果
│       ├─ 輸出結果圖 test_grid.png
│
└── (4) 程式進入點
        if __name__ == "__main__": main()

